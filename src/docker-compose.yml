version: '3.8'

services:
 # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: OcelotApiGateway/Dockerfile
    depends_on:
      - cadastroservice
      - consultaservice
    networks:
      - mynetwork
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://*:5003

  # Worker Service - Serviço de trabalho
  workerservice:
    build:
      context: .
      dockerfile: WorkerService/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - mynetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres

  # Projetotech (exemplo de aplicação)
  projetotech:
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile
    depends_on:
      - postgres
    networks:
      - mynetwork
    ports:
      - "8080:8080"   # Expondo a aplicação para a porta 8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres

  # Cadastro Service
  cadastroservice:
    build:
      context: .
      dockerfile: CadastroService/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
      - workerservice
    networks:
      - mynetwork
    ports:
      - "9000:9000"   # Expondo a aplicação para a porta 9000
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:9000
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres

  # Consulta Service
  consultaservice:
    build:
      context: .
      dockerfile: ConsultaService/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - mynetwork
    ports:
      - "9010:9010"  # Expondo a aplicação para a porta 9010
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:9010
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres

  # PostgreSQL
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"  # Expondo a porta 5432 para o banco de dados
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  # Prometheus para monitoramento
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mynetwork

  # Grafana para visualização
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - mynetwork

  # RabbitMQ (Filas de mensagens)
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # Porta de comunicação do RabbitMQ
      - "15672:15672"  # Interface web de gerenciamento
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynetwork

volumes:
  pgdata:
  grafana_data:

networks:
  mynetwork:
    driver: bridge
